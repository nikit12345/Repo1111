apiVersion: apps/v1
kind: Deployment
metadata:
  name: spring-boot-k8s-deployment
spec:
  replicas: 2
  selector:
    matchLabels:
      app: spring-boot-k8s
  template:
    metadata:
      labels:
        app: spring-boot-k8s
    spec:
      containers:
        - name: spring-boot-app
          image: nikitamane/dockerexample:latest  # Ensure this image is pushed to Docker Hub
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 808  # Change to the actual port Spring Boot runs on
          env:
            - name: SPRING_DATASOURCE_URL
              value: "jdbc:mysql://db-service:3306/my-db"
            - name: SPRING_DATASOURCE_USERNAME
              value: "admin"
            - name: SPRING_DATASOURCE_PASSWORD
              value: "root"
---
apiVersion: v1
kind: Service
metadata:
  name: springboot-k8s-service
spec:
  selector:
    app: spring-boot-k8s
  ports:
    - protocol: "TCP"
      port: 808    # Service port
      targetPort: 808  # Must match containerPort
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
        - name: mysql
          image: mysql:8.4
          ports:
            - containerPort: 3306
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: "root"
            - name: MYSQL_DATABASE
              value: "my-db"
            - name: MYSQL_USER
              value: "admin"
            - name: MYSQL_PASSWORD
              value: "root"
---
apiVersion: v1
kind: Service
metadata:
  name: db-service
spec:
  selector:
    app: mysql
  ports:
    - protocol: TCP
      port: 3306
      targetPort: 3306
  type: ClusterIP
